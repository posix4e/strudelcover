name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint

  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        llm-provider: [anthropic, openai]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Install FFmpeg
      run: sudo apt-get update && sudo apt-get install -y ffmpeg
    
    - name: Run E2E Tests
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LLM_PROVIDER: ${{ matrix.llm-provider }}
      run: npm test
    
    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots-${{ matrix.llm-provider }}
        path: test-results/
        retention-days: 7
    
    - name: Upload Recordings
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: recordings-${{ matrix.llm-provider }}
        path: recordings/
        retention-days: 7

  test-pattern-generation:
    name: Test Pattern Generation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Test Pattern Generation
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        # Create a simple test script
        cat > test-pattern.js << 'EOF'
        import { dazzle } from './src/dazzle.js';
        
        try {
          const pattern = await dazzle('test.mp3', 'Test Artist', 'Test Song', {
            provider: 'anthropic'
          });
          console.log('Pattern generated successfully');
          process.exit(0);
        } catch (error) {
          console.error('Pattern generation failed:', error);
          process.exit(1);
        }
        EOF
        
        # Run the test
        timeout 60s node test-pattern.js